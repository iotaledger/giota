package mam_test

import (
	. "github.com/onsi/ginkgo"
	. "github.com/onsi/gomega"

	"github.com/iotaledger/iota.go/api"
	mam "github.com/iotaledger/iota.go/mam/v1"
	"github.com/iotaledger/iota.go/transaction"
	"github.com/iotaledger/iota.go/trinary"
)

var _ = Describe("Receiver", func() {

	Context("Subcribe", func() {

		It("Should add a subscription to the transmitter", func() {
			receiver := mam.NewReceiver(newFakeAPI(), "PN9CYZTVHPKVRVBOOIRZDZSHQLURKQYSQTTDOGAKZZ9SCGIWTTOBPRWVPZRHZJHIWOKLZE9SQJWGPGFTXUMUPGBBN9")

			receiver.Subscribe("", mam.ChannelModePublic, "")

			Expect(receiver.SubscriptionCount()).To(Equal(1))
		})

	})

	Context("Receive", func() {

		It("Should ", func() {
			fakeAPI := newFakeAPI()
			fakeAPI.findTransactionObjects = func(query api.FindTransactionsQuery) (transaction.Transactions, error) {
				Expect(query).To(Equal(api.FindTransactionsQuery{
					Addresses: trinary.Hashes{"PN9CYZTVHPKVRVBOOIRZDZSHQLURKQYSQTTDOGAKZZ9SCGIWTTOBPRWVPZRHZJHIWOKLZE9SQJWGPGFTXUMUPGBBN9"},
				}))
				return transaction.Transactions{
					transaction.Transaction{
						Hash:                     "YJLLUHLGJNZNMT9JGIHNOTPUNHHZWSOC9NCUFYYUNX9VNVMSWIDYAFBYTBBCVMJUOLDZESRWTVZX99999",
						SignatureMessageFragment: "HH9ZURAASMZCC9EESAHNIFQJRUEPETKZCWWYDHXHUYZOUXCUI99TUATEHWVPIZQYHWYOBNSQWZKKUVRZQHTPJEPAJFCBWOXRZMWUACSUUIADMCMV9ZYYNAYLDZMFSHSAVVXNQOCZDOGMQVCJLEBGAYNGYJKOPDHBVDKBGVVCSQIBAHVFJOHIKHQKSDMTCVHIAQUB9ULLSSUUUVKI9X9AYY9FBRWZDONSKVFQRIEIYMFFWVHUT9EZMDVSDHNTWAIKEWZFUARBPFJZWEBEYRDRNSSHOQWJAWTSYTFMYLDGTTXMWCMALHJFBAYIESEBNBEZCZQJGZPAHDADUULD9UDRXCDPOFIPKBLL9RUPPIMH9MEJSUCWGQMKBVFTAZSOFPUQHXUQBJCACNHCHGJYVGHJPUKSMZQWVSPBTQOGTALQUQXUCVAXRBKRSJZPXQIWBRIIEOC9JXVTBNEBAOZBOOOPPTNKMYJCDEFJJQXAIOIBLCSPFFSDGVXYKNUPWMVOEMCJXMVLYSFFRBUAAYXROCEYIER9SBBGJRJRNBOBKAZWGSEY9FK9GJBFZY9LBBT9GXIAKKCQEBZASGUSDFDUC9QYSTPAXPLLEUSKIMJDOVCAFYKSP9WGB9A9YDAQCDNTHJJQWCZHIQTQYKPBXMTWNSBKZJESTVURV9PKJFAEEUCVFXXMNBMOE9GTYNJV9TUJKPQEXOIEN9NEZKWXXDZBTIGXPNBHMNQGEJ9HOFGHUAAVHXO9UBNZOQFKFRDTIOKBCSPYPZ9QEATBLCHXXPNPEXTYGZHDRSYVCMBGK9XQBSECRXJSKD9QFFMVAFDAIYWICUSDKKTKMPWHCHMMNHDTGXYBLTOQTUMQLPFLFGLWEALWFCFEYXQKOBTVH9GIAFHLNQDPIZOAPMVRFWDQDQKMNDJVPCNL9IVRDMEZSVUSGDCH9IFUKQZCJUEMQMQFGTLWTUBGHBYLKKWJFWUVTVLMQALCIPTJUEMRXAGGXSHJQCYZXDNTFL9FHYN9JTUTWJBJWMKVPDXFIMOOBBRUYP9SZZHNKOHCWY9DNQWZKDYTMPCD9OKRCQXTZKIIMGXNBKAAQVBHXULWRGCEVOSPFJVKGIQBGUUVEVHTCZBQOFOIERIYCDKZ9JCNPUUQPAQEM9UXOMBICNYBNXIKTIWVNNUNJCBOVOXV9YCYQUPJJGRCOUVKSELOQECMOACRCHHTSFWWQGBZT9QYTQPDTXLVVPQXADFDR9DMEPIVIUTBJYBDVROEIEVPTBLIZWI9DEVCNLTWYILRQTRKYNAHSEJJMZLIAOF9JSWPHYSWSRYDDUMMTKIACLFJGQUXKFFFXHGHXNTLFHUKHMW9REHQSQGZHMMXMIVAPOPM9IULJPMBFTHOJIZDECOFFALTSJXEVBHNPCMWWJWOVOOPQHHBGMMXGKAMMOLHHJVYCCSQMBWMCXPRSIKLEFZPLXTEUPITXCQ9AUMTAXORLWUJZBZFCYHAHBDKMMCUVQZ9VUJQCZSBRPEJLWNTGLKYRGTOEMVENSRJWPBVYNNWBZBMXTXSYXKIOCPYOKVNCVIIHFIWHJPYVAOYBW9SCFLLUMQACVYYTWZK9SBPCPAJTRRJSBDCXSBSHTHDEKKXWKYBH9TCQGJOQRKXMFVDFOFNXPMVB9XVYSJURFGPMOVADOCQXXRKOOZYLKQEDKCKAKGLICDPGCVZV9TQBIHJFPKFVO9VQDAWTKSPFSHJW9D9VRGIQPGJNFNMGVXBOOUKYCCJNW9VSFLYHLJIDDXEBKXYLQNROYQSPIZBXETKOPJXVEWCVWZTVEZMQJYTYPYEAQTQYOXVNKRFGOZXZQIKOBQSUHVMXRKXSEHPIAZPYGNZXXWB9COQV9MVLSXZJICFLEOVLZFWIA9JUIPFIOHXFXVBYXOHKY9RWMEVWCYRDHBEOZ9MAPOFT9WNEFBBURIQUN9RUSSM9FQFUSNOPTZLJIPYV9SDCO9EJRMQIM9JPRYCEUTM9FOXNRIZTGUP9XKXLGA9CNYQEGKOQOAZQEPIMDWL9XAPCIBAVMMZBLIQEWFWWULEPXIMPBJORAHGSMCHDNSQMMWVKGCGRLFLA9ZHHMJVCNNSNETRIBQTPDB9MX9VSNSEOQIK9SZDITUMMESYKJYD9YKZKCOYIUHLYOZFWJEJUACE9STXQB9RHLL9YVNITZIULZYUJNH",
						Address:                  "PN9CYZTVHPKVRVBOOIRZDZSHQLURKQYSQTTDOGAKZZ9SCGIWTTOBPRWVPZRHZJHIWOKLZE9SQJWGPGFTX",
						CurrentIndex:             0x1,
						LastIndex:                0x2,
						Bundle:                   "FGEYEVYLIYESSZTIBXAIDQSK9QSJSX9JFLYKHETYIQRCWVRBVWIDQJBEUSHOIKRLJXLPSGWALTKFXSVCW",
						TrunkTransaction:         "VSAASONOCUUTNIVXUJ99ES9ZPPWVZOZBAIHL9ALHYDLYNFXSDYIOVUFHBZKVR9ETZDZHI9YHZZYO99999",
						BranchTransaction:        "CTHMUYWJYAICTJDPVKVIHDBLYDUKVVQPWKXAUW9FATKLSRUVSRTYAHYMTXYNJSZZSAOEXSXSYOLTZ9999",
						Nonce:                    "POWSRVIO9LVB999LNVMMGPTNNNV",
					},
					transaction.Transaction{
						Hash:                     "VSAASONOCUUTNIVXUJ99ES9ZPPWVZOZBAIHL9ALHYDLYNFXSDYIOVUFHBZKVR9ETZDZHI9YHZZYO99999",
						SignatureMessageFragment
						Address:                  "PN9CYZTVHPKVRVBOOIRZDZSHQLURKQYSQTTDOGAKZZ9SCGIWTTOBPRWVPZRHZJHIWOKLZE9SQJWGPGFTX",
						CurrentIndex:             0x2,
						LastIndex:                0x2,
						Bundle:                   "FGEYEVYLIYESSZTIBXAIDQSK9QSJSX9JFLYKHETYIQRCWVRBVWIDQJBEUSHOIKRLJXLPSGWALTKFXSVCW",
						TrunkTransaction:         "CTHMUYWJYAICTJDPVKVIHDBLYDUKVVQPWKXAUW9FATKLSRUVSRTYAHYMTXYNJSZZSAOEXSXSYOLTZ9999",
						BranchTransaction:        "BZWSJSIGOCGELCBNELWXHQKNXZVHWSPFMIMI9CMBEZITWJNVNNCOWNSVQBFLIUILBQSUUCUIFGPW99999",
						Nonce:                    "POWSRVIO9LVB999UNTTPPPVNNNV",
					},
					transaction.Transaction{
						Hash:                     "FPZSZEPOSNZVCMDNIJVBNRJHMUXBKRIFEHBERVQCRJXJCIAXGEUHFJKKAZTCDBNWCFPZYUADQDPA99999",
						SignatureMessageFragment
						Address:                  "PN9CYZTVHPKVRVBOOIRZDZSHQLURKQYSQTTDOGAKZZ9SCGIWTTOBPRWVPZRHZJHIWOKLZE9SQJWGPGFTX",
						CurrentIndex:             0x0,
						LastIndex:                0x2,
						Bundle:                   "FGEYEVYLIYESSZTIBXAIDQSK9QSJSX9JFLYKHETYIQRCWVRBVWIDQJBEUSHOIKRLJXLPSGWALTKFXSVCW",
						TrunkTransaction:         "YJLLUHLGJNZNMT9JGIHNOTPUNHHZWSOC9NCUFYYUNX9VNVMSWIDYAFBYTBBCVMJUOLDZESRWTVZX99999",
						BranchTransaction:        "CTHMUYWJYAICTJDPVKVIHDBLYDUKVVQPWKXAUW9FATKLSRUVSRTYAHYMTXYNJSZZSAOEXSXSYOLTZ9999",
						Nonce:                    "POWSRVIO9LVB999OEKKKKVTNNNT",
					},
				}, nil
			}
			receiver := mam.NewReceiver(fakeAPI, "PN9CYZTVHPKVRVBOOIRZDZSHQLURKQYSQTTDOGAKZZ9SCGIWTTOBPRWVPZRHZJHIWOKLZE9SQJWGPGFTXUMUPGBBN9")

			messages, err := receiver.Receive()
			Expect(err).NotTo(HaveOccurred())
			Expect(messages).To(Equal([]string{"Hello!"}))
		})

	})

})
